name: Build workflow (Linux Cross)

on:
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1

    steps:
    - name: Update sources.list for cross compilation tools
      run: |
        sudo dpkg --add-architecture arm64
        sudo touch /etc/apt/sources.list.d/arm-cross-compile-sources.list
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy main restricted" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates main restricted" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy universe" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates universe" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy multiverse" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates multiverse" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-backports main restricted universe multiverse" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo apt update

    - name: Setup OpenGL and cross compilation tools
      run: |
        sudo apt -y install libstdc++-12-dev-arm64-cross g++-aarch64-linux-gnu
        sudo apt -y install libopengl-dev:arm64 libglu1-mesa-dev:arm64

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: 'update'
        fetch-depth: 1
        submodules: recursive

    - name: Update submodules
      id: update
      run: git submodule update --remote --recursive

    - name: Check before
      run: ls -l lib/*

    - name: Run rebuild script
      run: |
        cd ${GITHUB_WORKSPACE}/script
        bash ./rebuild_libs_linux_cross.sh
        cd ${GITHUB_WORKSPACE}

    - name: Check after
      run: ls -l lib/*

    - name: Commit new libraries
      run: |
        git config user.name "bot"
        git config user.email "bot"
        git commit -a -m "commit by bot"
        git push -u origin update
